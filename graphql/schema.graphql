type User {
  id: ID!
  name: String!
  email: String!
   messages: [Message!]! @hasMany
}

type Query {
  user(id: ID! @eq): User @find
  users: [User!]! @paginate
  message(id: ID! @eq): Message @find
  messages: [Message!]! @all
}

type Message {
  id: ID!
  content: String!
}

type UserPaginator {
  paginatorInfo: PaginatorInfo!
  data: [User!]!
}

type PaginatorInfo {
  count: Int!
  currentPage: Int!
  firstItem: Int
  hasMorePages: Boolean!
  lastItem: Int
  lastPage: Int!
  perPage: Int!
  total: Int!
}

type Mutation {
  login(
    email: String!
    password: String!
  ): String @field(resolver: "AuthMutator@login")

  registration(
      email: String! @rules(apply: ["email", "required"], attribute: "user email")
      name: String! @rules(apply: ["required"], attribute: "user name")
      password: String! @rules(apply: ["required"], attribute: "user name")
  ): String @field(resolver: "AuthMutator@register")
}


