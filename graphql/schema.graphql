type User {
  id: ID!
  name: String!
  email: String!
   messages: [Message!]! @hasMany
}

type Query {
  user(id: ID! @eq): User @find
  users: [User!]! @paginate
  message(id: ID! @eq): Message @find
  messages: [Message!]! @all
}

type Message {
  id: ID!
  content: String!
}

type UserPaginator {
  paginatorInfo: PaginatorInfo!
  data: [User!]!
}

type PaginatorInfo {
  count: Int!
  currentPage: Int!
  firstItem: Int
  hasMorePages: Boolean!
  lastItem: Int
  lastPage: Int!
  perPage: Int!
  total: Int!
}

type Mutation {
  login(
    email: String! @rules(
                apply: ["email", "required", "exists:users,email"],
                 messages: [
                                             {
                                                 rule: "email"
                                                 message: "Email is incorrect"
                                             }
                                             {
                                                 rule: "required"
                                                 message: "Email is required"
                                             }
                                             {
                                                 rule: "unique"
                                                 message: "Email must exists in table"
                                             }
                                         ])
    password: String! @rules(
                apply: ["required"],
                            messages: [
                                    {
                                        rule: "required"
                                        message: "Password is required"
                                    }
                                ])
  ): String @field(resolver: "AuthMutator@login")

  registration(
      email: String! @rules(
            apply: ["email", "required", "unique:users,email"],
             messages: [
                                         {
                                             rule: "email"
                                             message: "Email is incorrect"
                                         }
                                         {
                                             rule: "required"
                                             message: "Email is required"
                                         }
                                         {
                                             rule: "unique"
                                             message: "Email must be unique"
                                         }
                                     ])
      name: String! @rules(
            apply: ["required"],
            messages: [
                    {
                        rule: "required"
                        message: "Name is required"
                    }
                ])
      password: String! @rules(
            apply: ["required"],
                        messages: [
                                {
                                    rule: "required"
                                    message: "Password is required"
                                }
                            ])
  ): String @field(resolver: "AuthMutator@register")
}


